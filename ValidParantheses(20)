// Leetcode-20... Valid parantheses
// Here, a string is give with some parantheses and we need to verify is that valid string
1. Declare a stack and convert the given string to char array
2. Start looping from beginning of the array, check if it is openig parantheses, add it to a stack
3. If it is closing parantheses then, check if stack's top if the opening bracket is same as closing's,
   if it is then pop it from stack and move forword, if it is not then return false

class Solution {
    public boolean isValid(String str) {
        Stack<Character> stk = new Stack<>();
        for (char s : str.toCharArray()) {
        //for(int i=0 ; i<s.length() ; i++){
            if(s=='(' ||s=='{' ||s=='['){
                stk.push(s);
            }
            else{ 
                if(stk.isEmpty()){
                return false;
                }

            if((stk.peek() == '(' && s==')') ||
                (stk.peek() == '[' && s==']') ||
                (stk.peek() == '{' && s=='}')){
                    stk.pop();
                }
            else{
                return false;
            }
        }
        }
        return stk.isEmpty();
    }
    
}
