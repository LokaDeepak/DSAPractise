// Leetcode-735... Adtroid collision...
Optimal solution
1. Here, we need to push the positive into the stack or array list and remove numbers in container until it is greater
2. Traverse entire array and push if it is positive
3. Remove the element frm from stack if, topost element is lesser than arr[i], or remove if arr[i] is equal to topmost element
4. If the stack is empty add the negative element itself if arr[i] is negative
5. Convert the stack or array list into array and finally return the result or final array.
class Solution {
    public int[] asteroidCollision(int[] arr) {
        ArrayList<Integer> st = new ArrayList<>();
        int n = arr.length;
        for(int i=0 ; i<n ; i++){
            if(arr[i]>0){
                st.add(arr[i]);
            }
            else{
                while(!st.isEmpty() && st.get(st.size()-1)>0 && st.get(st.size()-1) < Math.abs(arr[i])){
                    st.remove(st.size()-1); //break;
                }
                if(!st.isEmpty() && st.get(st.size()-1)==Math.abs(arr[i])){
                    st.remove(st.size()-1);// break;
                }
                else if(st.isEmpty() || st.get(st.size()-1)<0){
                    st.add(arr[i]);
                }
            }
        }
        int[] res = new int[st.size()];
        for (int i = 0; i < st.size(); i++) {
            res[i] = st.get(i);
        }
        return res;
    }
}
